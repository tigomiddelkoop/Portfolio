apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio
  labels:
    app: portfolio
spec:
  replicas: 5
  selector:
    matchLabels:
      app: portfolio
  template:
    metadata:
      labels:
        app: portfolio
    spec:
      containers:
        - name: portfolio
          image: rg.nl-ams.scw.cloud/genericdevelopment/portfolio:3.0.1
#          resources:
#            requests:
#              memory: "64Mi"
#              cpu: "100m"
#            limits:
#              memory: "128Mi"
#              cpu: "250m"
          ports:
            - containerPort: 3000
          env:
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 600
      imagePullSecrets:
        - name: regcred
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: portfolio
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - tigo.tech
      secretName: echo-tls
  rules:
    - host: tigo.tech
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: portfolio
                port:
                  number: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: portfolio
spec:
  type: NodePort
  selector:
    app: portfolio
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: cert-manager
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: tigo.middelkoop@gmail.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod
    # Enable the HTTP-01 challenge provider
    solvers:
      - http01:
          ingress:
            class: nginx